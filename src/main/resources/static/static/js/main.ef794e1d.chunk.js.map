{"version":3,"sources":["actions/types.js","components/Project/ProjectItem.js","actions/projectActions.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","ProjectItem","onDeleteClick","id","props","deleteProject","project","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","dispatch","a","window","confirm","axios","delete","type","payload","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","data","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","e","setState","target","name","value","preventDefault","newProject","createProject","history","classnames","placeholder","nextProps","prevState","prevErrors","post","push","response","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","event","updateProject","disabled","ProjectTask","project_identifier","project_sequence","deleteProjectTask","priorityClass","priorityString","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","index","length","console","log","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","projectNotFoundInAccount","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef794e1d.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\n//This component is used to show the projects on the dashboard\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      //<!-- Project Item Component -->\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      //<!-- End of Project Item Component -->\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project/add\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const updateProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//Component used to address the event when the button is clicked to be used in Apps.js\nfunction CreateProjectButton() {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n}\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\n//Component to hold the projects on the dashboard screen\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      //<!-- Dashboard Component (Project Item included) -->\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      // <!-- End of Dashboard Component -->\n    );\n  }\n}\n\nDashboard.propTypes = {\n  getProjects: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // Post = Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localstorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on react\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\n//Component that is used to receive the project information from the form by the user to be stored in database\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //Life cycle hooks\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.errors !== prevState.prevErrors) {\n      return { errors: nextProps.errors };\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  createProject,\n})(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n//This components is used to store the state of the object on the web\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject } from \"../../actions/projectActions\";\nimport { updateProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.updateProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    placeholder=\"Unique Project ID\"\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  updateProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProject, updateProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(project_identifier, project_sequence) {\n    this.props.deleteProjectTask(project_identifier, project_sequence);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityClass;\n    let priorityString;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (\n  project_identifier,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.post(`/api/projectTask/${project_identifier}`, project_task);\n    history.push(`/projectBoard/${project_identifier}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (project_identifier, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/projectTask/${project_identifier}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (\n  project_identifier,\n  project_sequence,\n  history\n) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `/api/projectTask/${project_identifier}/${project_sequence}`\n    );\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  project_identifier,\n  project_sequence,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(\n      `/api/projectTask/${project_identifier}/${project_sequence}`,\n      project_task\n    );\n    history.push(`/projectBoard/${project_identifier}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (\n  project_identifier,\n  project_sequence\n) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${project_sequence}, are you sure?`\n    )\n  ) {\n    await axios.delete(\n      `/api/projectTask/${project_identifier}/${project_sequence}`\n    );\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: project_sequence,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let index = 0; index < tasks.length; index++) {\n      console.log(tasks[index]);\n\n      if (tasks[index].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[index]);\n      }\n\n      if (tasks[index].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[index]);\n      }\n\n      if (tasks[index].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[index]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else if (errors.projectNotFoundInAccount) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFoundInAccount}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks in this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task </i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  getBacklog,\n})(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.errors !== prevState.prevErrors) {\n      return { errors: nextProps.errors };\n    }\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                    placeholder=\"Project Task summary\"\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria,\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                  {errors.acceptanceCriteria && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.dueDate,\n                    })}\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.dueDate && (\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.priority,\n                    })}\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                  {errors.priority && (\n                    <div className=\"invalid-feedback\">{errors.priority}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.status,\n                    })}\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                  {errors.status && (\n                    <div className=\"invalid-feedback\">{errors.status}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {\n  addProjectTask,\n})(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n    });\n  }\n\n  componentDidMount() {\n    const { project_identifier, project_sequence } = this.props.match.params;\n    this.props.getProjectTask(\n      project_identifier,\n      project_sequence,\n      this.props.history\n    );\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At,\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { project_identifier } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${project_identifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Identifier: {this.state.projectIdentifier} - Sequence:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                    placeholder=\"Project Task summary\"\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria,\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                  {errors.acceptanceCriteria && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.dueDate,\n                    })}\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.dueDate && (\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.priority,\n                    })}\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                  {errors.priority && (\n                    <div className=\"invalid-feedback\">{errors.priority}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.status,\n                    })}\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                  {errors.status && (\n                    <div className=\"invalid-feedback\">{errors.status}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Kanban Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.errors !== prevState.prevErrors) {\n      return { errors: nextProps.errors };\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.security.validToken) {\n      return nextProps.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors !== prevState.prevErrors) {\n      return { errors: nextProps.errors };\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            //Private routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:project_identifier/:project_sequence\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}